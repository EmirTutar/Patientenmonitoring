networks:
  mqtt5_network:
    name: mqtt5_network

services:

  ## fall detection setup
  yolov5:
    build:
      context: ./yolov5/detection
      dockerfile: Dockerfile
    env_file: ./yolov5/.yolov5.env
    devices:
      - /dev/video0:/dev/video0  # Acces to camera

  mqtt_video:
    build:
      context: ./yolov5/video
      dockerfile: Dockerfile
    env_file: ./yolov5/.yolov5.env
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
    network_mode: "host"

  ## matirx server setup
  synapse:
      image: "matrixdotorg/synapse:v1.105.0"
      container_name: "matrix_synapse"
      volumes:
          - "./matrix/server/data:/data"
      depends_on:
          - postgres
      environment:
          VIRTUAL_PORT: 8008
          SYNAPSE_SERVER_NAME: "sysadmin-matrix"
          SYNAPSE_REPORT_STATS: "no" 
  postgres:
      image: postgres:16.2-alpine3.19
      container_name: postgres_container
      env_file: ./matrix/server/.postgres.env
      environment:
      - POSTGRES_INITDB_ARGS=-E UTF8 --lc-collate=C --lc-ctype=C
      ports:
          - 5432:5432
      volumes:
      - ./matrix/server/database:/var/lib/postgresql/data
  nginx:
      image: nginx:stable-alpine3.17
      container_name: nginx_container
      ports:
          - 80:80
          - 443:443
          - 8448:8448
      volumes:
        - ./matrix/server/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./matrix/server/certbot/www:/var/www/certbot/:ro
        - ./matrix/server/certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
      image: certbot/certbot:v2.10.0
      depends_on:
      - nginx
      command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN}
      volumes:
      - ./matrix/server/certbot/www/:/var/www/certbot/:rw
      - ./matrix/server/certbot/conf/:/etc/letsencrypt/:rw

  email_bridge:
    image: jojii/matrix_email_bridge
    volumes:
      - ./matrix/bridge:/app/data

  ## matirx client setup
  matrix_client:
    build:
      context: ./matrix/bridge
      dockerfile: Dockerfile
    env_file: ./matrix/client/.nio.env


    
  # mqtt5 eclipse-mosquitto
  mqtt5:
    build:
      context: ./mqtt5
      dockerfile: Dockerfile
    container_name: mqtt5
    ports:
      - "1883:1883" #default mqtt port
      - "9001:9001" #default mqtt port for websockets
    networks:
      - mqtt5_network
    volumes: 
      - ./mqtt5/data:/mosquitto/data
      - ./mqtt5/log:/mosquitto/log
    restart: unless-stopped

  mqtt5-publisher:
    build:
      context: ./mqtt5/example
      dockerfile: Dockerfile
    env_file:
      - path: ./mqtt5/example/.env
        required: true # default
      - path: ./mqtt5/example/.env.override
        required: false
    container_name: mqtt5_publisher
    networks:
      - mqtt5_network
    command: ["python3", "-u", "publisher.py"]
    restart: unless-stopped
  
  mqtt5-subscriber:
    build:
      context: ./mqtt5/example
      dockerfile: Dockerfile
    env_file:
      - path: ./mqtt5/example/.env
        required: true # default
      - path: ./mqtt5/example/.env.override
        required: false
    container_name: mqtt5_subscriber
    networks:
      - mqtt5_network
    command: ["python3", "-u", "subscriber.py"]
    restart: unless-stopped



